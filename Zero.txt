import pyttsx3 #pip install pyttsx3
import speech_recognition as sr  #pip install speechRecognition
import datetime
import wikipedia #pip install wikipedia
import webbrowser
import os
import smtplib


engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)
newvoicerate = 145
engine.setProperty('rate',newvoicerate)
# 1 is for female
# 0  is for male


def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning,I'm Fine!")

    elif hour>=12 and hour<18:
        speak("Good Afternoon,I'm Fine!")   

    else:
        speak("Good Evening,I'm Fine!")  

    speak("Greetings, my name is Zero.")       


def takeCommand():
    #It takes microphone input from the user and returns string output
    # these all terms are included in Speech recoginiztion library

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing...")    
        query = r.recognize_google(audio, language='en-us')
        print(f"User said: {query}\n")
        # using google AI

    except Exception as e:
        # print(e)    
        print("Say that again please...")  
        return "None"
    return query
# using simple mail transfer protocol
def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('akhsssociety@gmail.com', '')
    server.sendmail('taha.shah563@gmail.com', to, content)
    server.close()

if __name__ == "__main__":
    wishMe()
    while True:
    # if 1:
        query = takeCommand().lower()

        # Logic for executing tasks based on query
        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)

        elif 'open youtube' in query:
            webbrowser.open("youtube.com")
        
        elif 'how are you' in query:
           speak('I am fine thanks for asking')
        
        elif 'who are you' in query:
           speak('I am virtual assistance created by Taha and its team')

        elif 'open google' in query:
            webbrowser.open("google.com")

        elif 'open stackoverflow' in query:
            webbrowser.open("stackoverflow.com")   
        elif 'open insta' in query:
            webbrowser.open("instagram.com")
        elif 'open twitter' in query:
            webbrowser.open("twitter.com")
        elif 'open weather' in query:
            webbrowser.open("accuweather.com")

        #include this work include os library
        elif 'play music' in query:
            music_dir = 'D:\\Non Critical\\songs\\Favorite Songs2'
            songs = os.listdir(music_dir)
            print(songs)    
            os.startfile(os.path.join(music_dir, songs[0]))

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")    
            speak(f"Sir, the time is {strTime}")
        

        elif 'open code' in query:
            codePath = "C:\\Users\\Taha shah\\Desktop\\PF PROJECT"
            os.startfile(codePath)

        elif 'email to taha' in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "taha.shah563@gmail.com"    
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry my friend. I am not able to send this email")
       

